# This is a basic workflow to help you get started with Actions

name: eShop BUild

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    - 'src/Services/Coupon'
    - 'tests/Services/Coupon'
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-and-push-docker-image:
    runs-on: ubuntu-latest
    steps:
    - name: Get code from the repository
      uses: actions/checkout@v1
      with:
        ref: main
      
      - name: Run unit tests 
        run: dotnet test tests/Services/Coupon/*.Tests/*.csproj
        env:
          DOTNET_CLI_TELEMETRY_OPTOUT: true
          DOTNET_NOLOGO: true
        
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
          registry: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          path: .
          dockerfile: './src/Services/Coupon/Coupon.API/Dockerfile.acr'
          repository: 'coupon.api'
          tags: 'linux-latest'
          push: true
  
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
